<?php
/** @var $block \MageWorx\StoreLocator\Block\Search */
?>
<div class="mw-sl__search mw-sl__search--choose-location" id="mw-sl__search">
    <div class="mw-sl__search-select">
        <div class="mw-sl__search-select-content"><img src="<?= $block->escapeUrl(
                $block->getViewFileUrl('MageWorx_StoreLocator::images/svg/location.svg')
            ); ?>" alt="<?= $block->escapeHtml(__('Location icon')) ?>"/>
            <div class="mw-sl__search-select-location">
                <span id="mw_location_current_location_info"><?= $block->escapeHtml(
                        $block->getCurrentPlaceName()
                    ) ?></span>
                <div class="mw-sl__search-select-radius">
                    (<span id="mw_location_radius_info"> <?=
                        $block->escapeHtml($block->getDefaultRadiusValue()) ?></span> <?= $block->escapeHtml(
                        $block->getRadiusUnit() . ' ' . __('radius')
                    ) ?>)
                </div>
            </div>
        </div>
        <div class="mw-sl__search-select-actions">
            <button class="mw-sl__search-select-action mw-sl__search-select-action--edit-location" type="button">
                <?= $block->escapeHtml(__('Edit')) ?>
            </button>
            <button id="mw-sl_search_reset-location" class="mw-sl__search-select-action mw-sl__search-select-action--reset-location" type="button">
                <?= $block->escapeHtml(__('Reset')) ?></button>
        </div>
    </div>
    <div class="mw-sl__search-form-content">
        <div class="mw-sl__input">
            <input name="search_text" class="mw-sl__input__control" id="mw-sl_search_text" type="text" value="<?=
            $block->escapeHtml($block->getCurrentPlaceName()) ?>"/>
            <div class="mw-sl__input__button" aria-title="Search">
                <img id="mw-sl_search_icon" src="<?= $block->escapeUrl(
                    $block->getViewFileUrl('MageWorx_StoreLocator::images/svg/search.svg')
                ); ?>"
                     alt="<?= $block->escapeHtml(__('Search')) ?>"/>
            </div>
            <div class="mw-sl__input__backdrop"></div>
        </div>
        <div class="mw-sl__or"><?= $block->escapeHtml(__('OR')) ?></div>
        <div class="mw-sl__search__controls">
            <?php if ($block->isSetToUseCurrentLocation()) : ?>
                <div id="mw-sl_search_current-location" class="mw-sl__search__current-location">
                    <a id="use_location">
                        <i class="mw-sl__icon mw-sl__icon--location"><img
                                src="<?= $block->escapeUrl(
                                    $block->getViewFileUrl('MageWorx_StoreLocator::images/svg/location.svg')
                                ); ?>" alt="<?= $block->escapeHtml(__('Location icon')) ?>"/></i>
                        <?= $block->escapeHtml(
                            __('Use my current location')
                        ) ?></a>
                </div>
            <?php endif; ?>
            <div class="mw-sl__search__radius">
                <p class="mw-sl__search__text"><?= $block->escapeHtml(__('Radius to search')) ?></p>
                <select id="radius-select" name="radius" class="mw-sl__select">
                    <?php if (!empty($block->getPredefinedRadiusValues())) : ?>
                        <?php foreach ($block->getPredefinedRadiusValues() as $value) : ?>
                            <option value="<?=
                            $block->escapeHtml($value)
                            ?>" <?= $value == $block->getCurrentRadiusValue() ? 'selected' : '' ?>
                            ><?= $block->escapeHtml($value) . ' ' . $block->escapeHtml(
                                    $block->getRadiusUnit()
                                ) ?></option>
                        <?php endforeach; ?>
                    <?php endif; ?>
                    <option value="0" <?= '0' == $block->getCurrentRadiusValue() ? 'selected' : ''
                    ?>><?= $block->escapeHtml(__('All Stores')) ?></option>
                </select>
            </div>
        </div>
        <div class="mw-sl__search__footer">
            <button id="mw-sl_search_button" class="mw-sl__search__submit"><?= $block->escapeHtml(
                    __('Search')
                ) ?></button>
        </div>
        <input id="mw-sl__lat" name="autocomplete[lat]" type="hidden"
               value="<?= $block->escapeHtml($block->getCurrentLat()) ?>"/>
        <input id="mw-sl__lng" name="autocomplete[lng]" type="hidden"
               value="<?= $block->escapeHtml($block->getCurrentLng()) ?>"/>
        <input class="field" name="autocomplete[small_city]" id="mw_sublocality_level_1" type="hidden"
               value="<?= $block->escapeHtml($block->getCurrentSmallCity()) ?>"/>
        <input class="field" name="autocomplete[city]" id="mw_locality" type="hidden"
               value="<?= $block->escapeHtml($block->getCurrentCity()) ?>"/>
        <input class="field" name="autocomplete[region]" id="mw_administrative_area_level_1" type="hidden"
               value="<?= $block->escapeHtml($block->getCurrentRegion()) ?>"/>
        <input class="field" name="autocomplete[postcode]" id="mw_postal_code" type="hidden"
               value="<?= $block->escapeHtml($block->getCurrentPostCode()) ?>"/>
        <input class="field" name="autocomplete[country_id]" id="mw_country" type="hidden"
               value="<?= $block->escapeHtml($block->getCurrentCountryId()) ?>"/>
    </div>
</div>

<script type="text/javascript">

    var getLocationButton = document.getElementById("use_location");
    var defaultAllStoresBlockHtml;
    var defaultLocationListBlockHtml;

    require([
        "jquery",
    ], function () {
        if (getLocationButton) {
            var getLocationButtonText = getLocationButton.innerHTML;
        } else {
            var getLocationButtonText = '';
        }

        const findFirstPlace = (predictions, status) => {
            if (status != google.maps.places.PlacesServiceStatus.OK) {
                searchLocationAjax();
            }

            if (predictions[0] !== undefined) {
                placeService.getDetails(predictions[0], function (results, status) {
                    if (status === google.maps.places.PlacesServiceStatus.OK) {
                        place = results;
                        fillInAddressByPlace(place);
                        searchLocationAjax();
                    }
                });
            }
        };

        jQuery("#mw-sl_search_text").change(function () {
            autofill = true;
        });

        function searchLocationAjax() {
            var data = getData();
            var currentPage = jQuery('.current_page_type').attr('id');
            var currentProduct = jQuery('.current_product').attr('id');

            jQuery.ajax({
                url: '<?= $block->escapeUrl(
                    $block->getBaseUrl()
                );?>store_locator/location/searchLocations?_=' + new Date().getTime() + '&current_page=' + currentPage + '&current_products=' + currentProduct,
                type: 'POST',
                isAjax: true,
                dataType: 'html',
                showLoader: true,
                data: data,
                success: function (xhr, status, errorThrown) {
                    var result = xhr.split('|||');
                    jQuery('#mw-all-stores').html(result[0]);
                    if (result[1] !== undefined) {
                        jQuery('#mw-all-stores-filters').html(result[1]);
                        jQuery('.mw-sl__stores__list__item').show();
                    }
                    if (place !== undefined && place.geometry !== undefined) {
                        map.setCenter(place.geometry.location);
                        map.fitBounds(place.geometry.viewport);
                    }
                    //delete old markers
                    for (let i = 0; i < markers.length; i++) {
                        markers[i].setMap(null);
                    }
                    markers = [];
                    //add markers on map
                    locations.forEach(function (position, id) {
                        var marker = new google.maps.Marker({
                            position: position,
                            map: map,
                            icon: '<?= $block->escapeHtml($block->getMapIcon())?>',
                        });
                        //Add click action for marker
                        marker.addListener('click', function () {
                            map.setCenter(position);
                            map.setZoom(zoom + 5);
                            showLocationDetails(id);
                        });
                        markers.push(marker);
                    });
                    markerCluster.clearMarkers();
                    markerCluster = new MarkerClusterer(map, markers,
                        {
                            imagePath: '<?= $block->escapeJs($block->getClusterIcon())?>',
                            gridSize: 30
                        });

                    hideSearchForm();
                },
                error: function (xhr, status, errorThrown) {
                    console.log('There was an error loading stores\' data.');
                    console.log(errorThrown);
                }
            });
        }

        function showLocationDetails(code) {
            jQuery('.mw-sl__stores__filters').removeClass('is-active');
            jQuery('.mw-sl__stores__details').removeClass('is-active');
            jQuery('.location-header').removeClass('is-active');
            jQuery('#location-header').toggleClass('is-active');

            if (jQuery('#location-details_' + code).length < 1) {
                var currentPage = jQuery('.current_page_type').attr('id');
                jQuery.ajax({
                    url: '<?= $block->escapeUrl($block->getBaseUrl());?>store_locator/location/locationdetail?_='
                        + new Date().getTime() + '&id=' + code + '&current_page=' + currentPage,
                    type: 'POST',
                    isAjax: true,
                    dataType: 'html',
                    showLoader: true,
                    data: mwLocations,
                    success: function (xhr, status, errorThrown) {
                        if (jQuery('#location_details').length > 0) {
                            jQuery(xhr).appendTo('#location_details');
                        } else {
                            jQuery(xhr).appendTo('#location_details_' + code);
                        }

                        jQuery('#location-details_' + code).toggleClass('is-active');
                        jQuery('#location-header').toggleClass('is-active');
                        jQuery('#location-header_' + code).toggleClass('is-active');
                    },
                    error: function (xhr, status, errorThrown) {
                        console.log('There was an error loading stores\' data.');
                        console.log(errorThrown);
                    }
                });
            } else {
                jQuery('#location-details_' + code).toggleClass('is-active');
                jQuery('#location-header').toggleClass('is-active');
                jQuery('#location-header_' + code).toggleClass('is-active');
            }
            jQuery('.location-info-block_' + code).addClass('mw-store-locator-active-place');
            if (jQuery('.mw-sl__content--map-top').length) {
                jQuery('.location-info-block_' + code).insertBefore(jQuery('.mw-sl__stores__list__item').first());
                jQuery([document.documentElement, document.body]).animate({
                    scrollTop: jQuery(".mw-sl__stores__list").offset().top
                }, 500);
            }
        }

        function searchLocation() {
            if (autofill) {
                autocompleteService.getQueryPredictions({
                    input: document.getElementById('mw-sl_search_text').value
                }, findFirstPlace);
            } else {
                searchLocationAjax();
            }
        }

        function hideSearchForm() {
            var searchForm = jQuery('.mw-sl__search');
            searchForm.removeClass('mw-sl__search--choose-location');
            jQuery('.mw-sl__stores').css('height', '530px');
            jQuery('.mw-sl__content--map-right .mw-sl__stores').css('height', '600px');
        }

        function getData() {
            var formValue = function (name, value) {
                this.name = name;
                this.value = value;
            };

            var inputValues = jQuery('#mw-sl__search :input').map(function () {
                var type = jQuery(this).prop("type");

                if ((type === "checkbox" || type === "radio") && this.checked) {
                    return new formValue(this.name, jQuery(this).val());
                } else if (type !== "button" && type !== "submit") {
                    return new formValue(this.name, jQuery(this).val());
                }
            });

            var radius = jQuery('#radius-select').val();
            if (radius !== "0") {
                jQuery('.mw-sl__search-select-radius').show();
                jQuery('#mw_location_radius_info').text(radius);
            } else {
                jQuery('.mw-sl__search-select-radius').hide();
            }

            return inputValues;
        }

        function getLocation() {
            jQuery('body').loader('show');
            for (var component in componentForm) {
                document.getElementById('mw_' + component).value = '';
            }

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    showPosition,
                    locationFail,
                    {
                        maximumAge: 50000,
                        timeout: 10000,
                        enableHighAccuracy: true
                    });
            } else {
                getLocationButton.innerHTML = "<?= $block->escapeHtml(
                    __('Geolocation is not supported by this browser.')
                )?>";
            }
        }

        function showPosition(position) {
            var coordinates = {lat: position.coords.latitude, lng: position.coords.longitude};
            var currentPositionName = '';
            place = undefined;
            geocoder.geocode({'location': coordinates}, function (results, status) {
                if (status === 'OK' && results[0]['formatted_address'] !== undefined) {
                    currentPositionName = results[0]['formatted_address'];
                } else {
                    currentPositionName = "<?= $block->escapeHtml(
                        __('My location')
                    )?>";
                }

                jQuery("#sl__stores__current_place").text(currentPositionName);
                jQuery("#mw_location_current_location_info").text(currentPositionName);
                //hideSearchForm();
                var address = currentPositionName.split(", ");
                var preparedName = address[address.length - 1];
                if (address[address.length - 2] !== undefined) {
                    preparedName = address[address.length - 2] + ', ' + preparedName;
                }
                jQuery("#mw-sl_search_text").val(preparedName);
            });

            jQuery("#use_location").trigger('show_current_position', [coordinates]);
            jQuery("#mw-sl__lat").val(position.coords.latitude);
            jQuery("#mw-sl__lng").val(position.coords.longitude);
            jQuery(".mw-sl__search__current-location").addClass('mw-sl__search__current-location__loaded');
            jQuery('body').loader('hide');
        }

        function tryAPIGeolocation(apiKey) {
            jQuery.post("https://www.googleapis.com/geolocation/v1/geolocate?key=<?=
                $block->escapeHtml($block->getApiKey())?>", function (success) {
                showPosition({coords: {latitude: success.location.lat, longitude: success.location.lng}});
            })
                .fail(function (err) {
                    console.log(
                        "<?= $block->escapeHtml(
                            __('API Geolocation error.')
                        )?>" + err.responseJSON.error.message);
                    getLocationButton.innerHTML = getLocationButtonText + "</br><?= $block->escapeHtml(
                        __('Could not load geo position.')
                    )?>";
                });
        }

        function locationFail(error, apiKey) {
            switch (error.code) {
                case error.TIMEOUT:
                    console.log(
                        "<?= $block->escapeHtml(
                            __('Browser geolocation timeout error. ')
                        )?>" + error.message);
                    getLocationButton.innerHTML = getLocationButtonText + "</br><?= $block->escapeHtml(
                        __('Could not load geo position. ')
                    )?>";
                    break;
                case error.PERMISSION_DENIED:
                    tryAPIGeolocation(apiKey);
                    break;
                case error.POSITION_UNAVAILABLE:
                default:
                    console.log(
                        "<?= $block->escapeHtml(
                            __('Geo position unavailable.')
                        )?>" + error.message);
                    getLocationButton.innerHTML = getLocationButtonText + "</br><?= $block->escapeHtml(
                        __('Could not load geo position from browser.')
                    )?>";
                    break;
            }
            jQuery('body').loader('hide');
        }

        function resetSearch() {
            autofill = true;
            place = '';
            var defaultRadius = '<?= $block->escapeHtml($block->getDefaultRadiusValue()) ?>';
            var defaultPlace = '<?= $block->escapeHtml($block->getDefaultPlace()) ?>';

            jQuery('.mw-sl__search').addClass('mw-sl__search--choose-location');
            jQuery('.mw-sl__stores').css('height', '330px');
            jQuery('.mw-sl__content--map-right .mw-sl__stores').css('height', '400px');

            jQuery('.mw-sl__search-select-radius').show();
            jQuery('#mw_location_radius_info').text(defaultRadius);
            jQuery('#radius-select').val(defaultRadius);

            jQuery('#mw_location_current_location_info').text(defaultPlace);
            jQuery("#sl__stores__current_place").text(defaultPlace);
            jQuery('#mw-sl_search_text').val(defaultPlace);
            jQuery('.mw-sl__stores__current').text(defaultPlace);
            jQuery('input[name="autocomplete[lat]"]').val('');
            jQuery('input[name="autocomplete[lng]"]').val('');
            jQuery('input[name="autocomplete[small_city]"]').val('');
            jQuery('input[name="autocomplete[city]"]').val('');
            jQuery('input[name="autocomplete[region]"]').val('');
            jQuery('input[name="autocomplete[postcode]"]').val('');
            jQuery('input[name="autocomplete[country_id]"]').val('');

            jQuery('#mw-all-stores').html(defaultAllStoresBlockHtml);
            jQuery('#mw-sl__stores__list_block').html(defaultLocationListBlockHtml);
            jQuery(".mw-sl__search__current-location").removeClass('mw-sl__search__current-location__loaded');

            map.setCenter(center);
            map.setZoom(zoom);
        }

        jQuery(document).ready(function () {
            var defaultAllStoresBlock = document.getElementById("mw-all-stores");
            defaultAllStoresBlockHtml = defaultAllStoresBlock.innerHTML;
            var defaultLocationListBlock = document.getElementById("mw-sl__stores__list_block");
            defaultLocationListBlockHtml = defaultLocationListBlock.innerHTML;
        });

        jQuery('#mw-sl_search_text').bind("enterKey", function (e) {
            setTimeout(function () {
                searchLocation();
            }, 500);
        });

        jQuery('#mw-sl_search_text').keyup(function (e) {
            if (e.keyCode == 13) {
                jQuery(this).trigger("enterKey");
            }
        });

        jQuery('#mw-sl_search_reset-location').click(resetSearch);
        jQuery('#mw-sl_search_icon').click(searchLocation);
        jQuery('#mw-sl_search_button').click(searchLocation);
        jQuery('#mw-sl_search_current-location').click(getLocation);
    });

</script>
