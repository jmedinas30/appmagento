<?php
/** @var $block \MageWorx\StoreLocator\Block\Search */
?>
<div class="mw-sl__search mw-sl__search--choose-location" id="mw-sl__search">
    <div class="mw-sl__search-select">
        <div class="mw-sl__search-select-content"><img src="<?= $block->escapeUrl(
            $block->getViewFileUrl('MageWorx_StoreLocator::images/svg/location.svg')
        ); ?>" alt="<?= $block->escapeHtml(__('Location icon')) ?>"/>
            <div class="mw-sl__search-select-location">
                <span id="mw_location_current_location_info"><?= $block->escapeHtml(
                    $block->getCurrentPlaceName()
                ) ?></span>
                <div class="mw-sl__search-select-radius">
                    (<span id="mw_location_radius_info"> <?=
                        $block->escapeHtml($block->getDefaultRadiusValue()) ?></span> <?= $block->escapeHtml(
                            $block->getRadiusUnit() . ' ' . __('radius')
                        ) ?>)
                </div>
            </div>
        </div>
        <div class="mw-sl__search-select-actions">
            <button class="mw-sl__search-select-action mw-sl__search-select-action--edit-location" type="button">
                <?= $block->escapeHtml(__('Edit')) ?>
            </button>
            <button class="mw-sl__search-select-action mw-sl__search-select-action--reset-location" type="button"
                    onclick="resetSearch()">
                <?= $block->escapeHtml(__('Reset')) ?></button>
        </div>
    </div>
    <div class="mw-sl__search-form-content">
        <div class="mw-sl__input">
            <input name="search_text" class="mw-sl__input__control" id="mw-sl_search_text" type="text" placeholder="<?=
            $block->escapeHtml($block->getCurrentPlaceName()) ?>"/>
            <div class="mw-sl__input__button" aria-title="Search">
                <img src="<?= $block->escapeUrl(
                    $block->getViewFileUrl('MageWorx_StoreLocator::images/svg/search.svg')
                ); ?>"
                     alt="<?= $block->escapeHtml(__('Search')) ?>" onclick="searchLocation('by_radius')"/>
            </div>
            <div class="mw-sl__input__backdrop"></div>
        </div>
        <div class="mw-sl__or"><?= $block->escapeHtml(__('OR')) ?></div>
        <div class="mw-sl__search__controls">
            <?php if ($block->isSetToUseCurrentLocation()) : ?>
                <div class="mw-sl__search__current-location" onclick="getLocation()">
                    <a id="use_location">
                        <i class="mw-sl__icon mw-sl__icon--location"><img
                                src="<?= $block->escapeUrl(
                                    $block->getViewFileUrl('MageWorx_StoreLocator::images/svg/location.svg')
                                ); ?>" alt="<?= $block->escapeHtml(__('Location icon')) ?>"/></i>
                        <?= $block->escapeHtml(
                            __('Use my current location')
                        ) ?></a>
                </div>
            <?php endif; ?>
            <div class="mw-sl__search__radius">
                <p class="mw-sl__search__text"><?= $block->escapeHtml(__('Radius to search')) ?></p>
                <select id="radius-select" name="radius" class="mw-sl__select">
                    <?php if (!empty($block->getPredefinedRadiusValues())) : ?>
                        <?php foreach ($block->getPredefinedRadiusValues() as $value) : ?>
                            <option value="<?=
                            $block->escapeHtml($value)
                            ?>" <?= $value == $block->getRadiusValueFromSession() ? 'selected' : '' ?>
                            ><?= $block->escapeHtml($value) . ' ' . $block->escapeHtml(
                                $block->getRadiusUnit()) ?></option>
                        <?php endforeach; ?>
                    <?php endif; ?>
                    <option value="0" <?= '0' == $block->getDefaultRadiusValue(
                    ) ? 'selected' : '' ?>><?= $block->escapeHtml(__('All Stores')) ?></option>
                </select>
            </div>
        </div>
        <div class="mw-sl__search__footer">
            <button class="mw-sl__search__submit" onclick="searchLocation('by_radius')"><?= $block->escapeHtml(
                __('Search')
            ) ?></button>
        </div>
        <input id="mw-sl__lat" name="autocomplete[lat]" type="hidden"/>
        <input id="mw-sl__lng" name="autocomplete[lng]" type="hidden"/>
        <input class="field" name="autocomplete[small_city]" id="mw_sublocality_level_1" type="hidden"/>
        <input class="field" name="autocomplete[city]" id="mw_locality" type="hidden"/>
        <input class="field" name="autocomplete[region]" id="mw_administrative_area_level_1" type="hidden"/>
        <input class="field" name="autocomplete[postcode]" id="mw_postal_code" type="hidden"/>
        <input class="field" name="autocomplete[country_id]" id="mw_country" type="hidden"/>
    </div>
</div>

<script type="text/javascript">
    var getLocationButton = document.getElementById("use_location");
    var defaultAllStoresBlockHtml;
    var defaultLocationListBlockHtml;

    if (getLocationButton) {
        var getLocationButtonText = getLocationButton.innerHTML;
    } else {
        var getLocationButtonText = '';
    }

    function searchLocation(type) {
        var data = getData();
        var currentPage = jQuery('.current_page_type').attr('id');
        var currentProduct = jQuery('.current_product').attr('id');
        jQuery.ajax({
            url: '<?= $block->escapeUrl(
                $block->getBaseUrl()
            );?>store_locator/location/searchLocations?_=' + new Date().getTime() + '&type=' + type
                + '&current_page=' + currentPage + '&current_products=' + currentProduct,
            type: 'POST',
            isAjax: true,
            dataType: 'html',
            showLoader: true,
            data: data,
            success: function (xhr, status, errorThrown) {
                var result = xhr.split('|||');
                jQuery('#mw-all-stores').html(result[0]);
                if (result[1] !== undefined) {
                    jQuery('#mw-all-stores-filters').html(result[1]);
                    jQuery('.mw-sl__stores__list__item').show();
                }
                if (place !== undefined && place.geometry !== undefined) {
                    map.setCenter(place.geometry.location);
                    map.fitBounds(place.geometry.viewport);
                }

                hideSearchForm();
            },
            error: function (xhr, status, errorThrown) {
                console.log('There was an error loading stores\' data.');
                console.log(errorThrown);
            }
        });
    }

    function hideSearchForm() {
        var searchForm = jQuery('.mw-sl__search');
        searchForm.removeClass('mw-sl__search--choose-location');
        jQuery('.mw-sl__stores').css('height', '530px');
        jQuery('.mw-sl__content--map-right .mw-sl__stores').css('height', '600px');
    }

    function getData() {
        var formValue = function (name, value) {
            this.name = name;
            this.value = value;
        };

        var inputValues = jQuery('#mw-sl__search :input').map(function () {
            var type = jQuery(this).prop("type");

            if ((type === "checkbox" || type === "radio") && this.checked) {
                return new formValue(this.name, jQuery(this).val());
            } else if (type !== "button" && type !== "submit") {
                return new formValue(this.name, jQuery(this).val());
            }
        });

        var radius = jQuery('#radius-select').val();
        if (radius !== "0") {
            jQuery('.mw-sl__search-select-radius').show();
            jQuery('#mw_location_radius_info').text(radius);
        } else {
            jQuery('.mw-sl__search-select-radius').hide();
        }

        return inputValues;
    }

    function getLocation() {
        jQuery('body').loader('show');
        for (var component in componentForm) {
            document.getElementById('mw_' + component).value = '';
        }

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                showPosition,
                locationFail,
                {
                    maximumAge: 50000,
                    timeout: 10000,
                    enableHighAccuracy: true
                });
        } else {
            getLocationButton.innerHTML = "<?= $block->escapeHtml(
                __('Geolocation is not supported by this browser.')
            )?>";
        }
    }

    function showPosition(position) {
        var coordinates = {lat: position.coords.latitude, lng: position.coords.longitude};
        var currentPositionName = '';
        place = undefined;
        geocoder.geocode({'location': coordinates}, function (results, status) {
            if (status === 'OK' && results[0]['formatted_address'] !== undefined) {
                currentPositionName = results[0]['formatted_address'];
            } else {
                currentPositionName = "<?= $block->escapeHtml(
                    __('My location')
                )?>";
            }

            jQuery("#sl__stores__current_place").text(currentPositionName);
            jQuery("#mw_location_current_location_info").text(currentPositionName);
            //hideSearchForm();
            var address = currentPositionName.split(", ");
            var preparedName = address[address.length - 1];
            if (address[address.length - 2] !== undefined) {
                preparedName = address[address.length - 2] + ', ' + preparedName;
            }
            jQuery("#mw-sl_search_text").val(preparedName);
        });

        jQuery("#use_location").trigger('show_current_position', [coordinates]);
        jQuery("#mw-sl__lat").val(position.coords.latitude);
        jQuery("#mw-sl__lng").val(position.coords.longitude);
        jQuery(".mw-sl__search__current-location").addClass('mw-sl__search__current-location__loaded');
        jQuery('body').loader('hide');
    }

    function tryAPIGeolocation(apiKey) {
        jQuery.post("https://www.googleapis.com/geolocation/v1/geolocate?key=<?=
            $block->escapeHtml($block->getApiKey())?>", function (success) {
            showPosition({coords: {latitude: success.location.lat, longitude: success.location.lng}});
        })
            .fail(function (err) {
                console.log(
                    "<?= $block->escapeHtml(
                        __('API Geolocation error.')
                    )?>" + err.responseJSON.error.message);
                getLocationButton.innerHTML = getLocationButtonText + "</br><?= $block->escapeHtml(
                    __('Could not load geo position.')
                )?>";
            });
    };

    function locationFail(error, apiKey) {
        switch (error.code) {
            case error.TIMEOUT:
                console.log(
                    "<?= $block->escapeHtml(
                        __('Browser geolocation timeout error. ')
                    )?>" + error.message);
                getLocationButton.innerHTML = getLocationButtonText + "</br><?= $block->escapeHtml(
                    __('Could not load geo position. ')
                )?>";
                break;
            case error.PERMISSION_DENIED:
                tryAPIGeolocation(apiKey);
                break;
            case error.POSITION_UNAVAILABLE:
            default:
                console.log(
                    "<?= $block->escapeHtml(
                        __('Geo position unavailable.')
                    )?>" + error.message);
                getLocationButton.innerHTML = getLocationButtonText + "</br><?= $block->escapeHtml(
                    __('Could not load geo position from browser.')
                )?>";
                break;
        }
        jQuery('body').loader('hide');
    };

    function resetSearch() {
        var defaultRadius = '<?= $block->escapeHtml($block->getDefaultRadiusValue()) ?>';
        var defaultPlace = '<?= $block->escapeHtml($block->getCurrentPlaceName()) ?>';

        jQuery('.mw-sl__search').addClass('mw-sl__search--choose-location');
        jQuery('.mw-sl__stores').css('height', '330px');
        jQuery('.mw-sl__content--map-right .mw-sl__stores').css('height', '400px');

        jQuery('.mw-sl__search-select-radius').show();
        jQuery('#mw_location_radius_info').text(defaultRadius);
        jQuery('#radius-select').val(defaultRadius);

        jQuery('#mw_location_current_location_info').text(defaultPlace);
        jQuery('#mw-sl_search_text').val(defaultPlace);
        jQuery('.mw-sl__stores__current').text(defaultPlace);

        jQuery('#mw-all-stores').html(defaultAllStoresBlockHtml);
        jQuery('#mw-sl__stores__list_block').html(defaultLocationListBlockHtml);
        jQuery(".mw-sl__search__current-location").removeClass('mw-sl__search__current-location__loaded');

        map.setCenter(center);
        map.setZoom(zoom);
    }

    require([
        "jquery",
    ], function () {
        jQuery(document).ready(function () {
            var defaultAllStoresBlock = document.getElementById("mw-all-stores");
            defaultAllStoresBlockHtml = defaultAllStoresBlock.innerHTML;
            var defaultLocationListBlock = document.getElementById("mw-sl__stores__list_block");
            defaultLocationListBlockHtml = defaultLocationListBlock.innerHTML;
        });

        jQuery('#mw-sl_search_text').bind("enterKey", function (e) {
            setTimeout(function () {
                searchLocation('by_radius');
            }, 500);
        });

        jQuery('#mw-sl_search_text').keyup(function (e) {
            if (e.keyCode == 13) {
                jQuery(this).trigger("enterKey");
            }
        });
    });

</script>
